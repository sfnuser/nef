openapi: 3.0.0
info:
  description: |
    API for setting us an AS session with required QoS.
    Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).
    All rights reserved.
  title: 3gpp-as-session-with-qos
  version: 1.1.3
externalDocs:
  description: 3GPP TS 29.122 V16.9.0 T8 reference point for Northbound APIs
  url: http://www.3gpp.org/ftp/Specs/archive/29_series/29.122/
servers:
- url: '{apiRoot}/3gpp-as-session-with-qos/v1'
  variables:
    apiRoot:
      default: https://example.com
      description: apiRoot as defined in subclause 5.2.4 of 3GPP TS 29.122.
security:
- {}
- oAuth2ClientCredentials: []
paths:
  /{scsAsId}/subscriptions:
    get:
      parameters:
      - description: Identifier of the SCS/AS
        explode: false
        in: path
        name: scsAsId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AsSessionWithQoSSubscription'
                type: array
          description: OK.
        "307":
          description: Temporary Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "308":
          description: Permanent Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Acceptable
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: read all of the active subscriptions for the SCS/AS
      tags:
      - AsSessionWithQoS API SCS/AS level GET Operation
    post:
      callbacks:
        notificationDestination:
          '{request.body#/notificationDestination}':
            post:
              operationId: notificationDestination_request_bodyNotificationDestinationPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UserPlaneNotificationData'
                required: true
              responses:
                "204":
                  description: No Content (successful notification)
                "307":
                  description: Temporary Redirect
                  headers:
                    Location:
                      description: An alternative URI of the resource.
                      required: true
                      schema:
                        type: string
                "308":
                  description: Permanent Redirect
                  headers:
                    Location:
                      description: An alternative URI of the resource.
                      required: true
                      schema:
                        type: string
                "400":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Bad request
                "401":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Unauthorized
                "403":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Forbidden
                "404":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Not Found
                "411":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Length Required
                "413":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Payload Too Large
                "415":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Unsupported Media Type
                "429":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Too Many Requests
                "500":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Internal Server Error
                "503":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Service Unavailable
                default:
                  description: Generic Error
              x-callback-request: true
      parameters:
      - description: Identifier of the SCS/AS
        explode: false
        in: path
        name: scsAsId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsSessionWithQoSSubscription'
        description: Request to create a new subscription resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsSessionWithQoSSubscription'
          description: Created (Successful creation of subscription)
          headers:
            Location:
              description: Contains the URI of the newly created resource
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "411":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        "415":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Creates a new subscription resource
      tags:
      - AsSessionWithQoS API Subscription level POST Operation
  /{scsAsId}/subscriptions/{subscriptionId}:
    delete:
      parameters:
      - description: Identifier of the SCS/AS
        explode: false
        in: path
        name: scsAsId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the subscription resource
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content (Successful deletion of the existing subscription)
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPlaneNotificationData'
          description: OK (Successful deletion of the existing subscription)
        "307":
          description: Temporary Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "308":
          description: Permanent Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Deletes an already existing subscription
      tags:
      - AsSessionWithQoS API Subscription level DELETE Operation
    get:
      parameters:
      - description: Identifier of the SCS/AS
        explode: false
        in: path
        name: scsAsId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the subscription resource
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsSessionWithQoSSubscription'
          description: OK (Successful get the active subscription)
        "307":
          description: Temporary Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "308":
          description: Permanent Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Acceptable
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: read an active subscriptions for the SCS/AS and the subscription Id
      tags:
      - AsSessionWithQoS API Subscription level GET Operation
    patch:
      parameters:
      - description: Identifier of the SCS/AS
        explode: false
        in: path
        name: scsAsId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the subscription resource
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AsSessionWithQoSSubscriptionPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsSessionWithQoSSubscription'
          description: OK. The subscription was modified successfully.
        "307":
          description: Temporary Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "308":
          description: Permanent Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "411":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        "415":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Updates/replaces an existing subscription resource
      tags:
      - AsSessionWithQoS API subscription level PATCH Operation
    put:
      parameters:
      - description: Identifier of the SCS/AS
        explode: false
        in: path
        name: scsAsId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the subscription resource
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsSessionWithQoSSubscription'
        description: Parameters to update/replace the existing subscription
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsSessionWithQoSSubscription'
          description: OK (Successful update of the subscription)
        "307":
          description: Temporary Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "308":
          description: Permanent Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "411":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        "415":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Updates/replaces an existing subscription resource
      tags:
      - AsSessionWithQoS API subscription level PUT Operation
components:
  schemas:
    AsSessionWithQoSSubscription:
      example:
        notificationDestination: notificationDestination
        altQoSReferences:
        - altQoSReferences
        - altQoSReferences
        disUeNotif: true
        supportedFeatures: supportedFeatures
        sponsorInfo:
          aspId: aspId
          sponsorId: sponsorId
        ipDomain: ipDomain
        qosReference: qosReference
        websockNotifConfig:
          requestWebsocketUri: true
          websocketUri: websocketUri
        flowInfo:
        - flowDescriptions:
          - flowDescriptions
          - flowDescriptions
          flowId: 0
        - flowDescriptions:
          - flowDescriptions
          - flowDescriptions
          flowId: 0
        ethFlowInfo:
        - destMacAddr: destMacAddr
          destMacAddrEnd: destMacAddrEnd
          sourceMacAddr: sourceMacAddr
          ethType: ethType
          fDesc: fDesc
          vlanTags:
          - vlanTags
          - vlanTags
          srcMacAddrEnd: srcMacAddrEnd
        - destMacAddr: destMacAddr
          destMacAddrEnd: destMacAddrEnd
          sourceMacAddr: sourceMacAddr
          ethType: ethType
          fDesc: fDesc
          vlanTags:
          - vlanTags
          - vlanTags
          srcMacAddrEnd: srcMacAddrEnd
        requestTestNotification: true
        usageThreshold:
          duration: 0
          totalVolume: 0
          downlinkVolume: 0
          uplinkVolume: 0
        ueIpv4Addr: ueIpv4Addr
        self: self
        ueIpv6Addr: ueIpv6Addr
        qosMonInfo:
          reqQosMonParams:
          - null
          - null
          repFreqs:
          - null
          - null
          repThreshUl: 0
          repThreshDl: 0
          repPeriod: 2
          repThreshRp: 0
          waitTime: 3
        macAddr: macAddr
      properties:
        self:
          description: string formatted according to IETFÂ RFCÂ 3986 identifying a referenced
            resource.
          type: string
        supportedFeatures:
          pattern: ^[A-Fa-f0-9]*$
          type: string
        notificationDestination:
          description: string formatted according to IETFÂ RFCÂ 3986 identifying a referenced
            resource.
          type: string
        flowInfo:
          description: Describe the data flow which requires QoS.
          items:
            $ref: '#/components/schemas/FlowInfo'
          minItems: 1
          type: array
        ethFlowInfo:
          description: Identifies Ethernet packet flows.
          items:
            $ref: '#/components/schemas/EthFlowDescription'
          minItems: 1
          type: array
        qosReference:
          description: Identifies a pre-defined QoS information
          type: string
        altQoSReferences:
          description: Identifies an ordered list of pre-defined QoS information.
            The lower the index of the array for a given entry, the higher the priority.
          items:
            type: string
          minItems: 1
          type: array
        disUeNotif:
          type: boolean
        ueIpv4Addr:
          description: string identifying a Ipv4 address formatted in the "dotted
            decimal" notation as defined in IETFÂ RFCÂ 1166.
          type: string
        ipDomain:
          type: string
        ueIpv6Addr:
          description: string identifying a Ipv6 address formatted according to clause
            4 in IETFÂ RFCÂ 5952. The mixed Ipv4 Ipv6 notation according to clause 5
            of IETFÂ RFCÂ 5952 shall not be used.
          type: string
        macAddr:
          pattern: ^([0-9a-fA-F]{2})((-[0-9a-fA-F]{2}){5})$
          type: string
        usageThreshold:
          $ref: '#/components/schemas/UsageThreshold'
        sponsorInfo:
          $ref: '#/components/schemas/SponsorInformation'
        qosMonInfo:
          $ref: '#/components/schemas/QosMonitoringInformation'
        requestTestNotification:
          description: Set to true by the SCS/AS to request the SCEF to send a test
            notification as defined in subclause 5.2.5.3. Set to false or omitted
            otherwise.
          type: boolean
        websockNotifConfig:
          $ref: '#/components/schemas/WebsockNotifConfig'
      required:
      - notificationDestination
      type: object
    AsSessionWithQoSSubscriptionPatch:
      properties:
        flowInfo:
          description: Describe the data flow which requires QoS.
          items:
            $ref: '#/components/schemas/FlowInfo'
          minItems: 1
          type: array
        ethFlowInfo:
          description: Identifies Ethernet packet flows.
          items:
            $ref: '#/components/schemas/EthFlowDescription'
          minItems: 1
          type: array
        qosReference:
          description: Pre-defined QoS reference
          type: string
        altQoSReferences:
          description: Identifies an ordered list of pre-defined QoS information.
            The lower the index of the array for a given entry, the higher the priority.
          items:
            type: string
          minItems: 1
          type: array
        disUeNotif:
          type: boolean
        usageThreshold:
          $ref: '#/components/schemas/UsageThresholdRm'
        qosMonInfo:
          $ref: '#/components/schemas/QosMonitoringInformationRm'
      type: object
    QosMonitoringInformation:
      example:
        reqQosMonParams:
        - null
        - null
        repFreqs:
        - null
        - null
        repThreshUl: 0
        repThreshDl: 0
        repPeriod: 2
        repThreshRp: 0
        waitTime: 3
      properties:
        reqQosMonParams:
          items:
            $ref: '#/components/schemas/RequestedQosMonitoringParameter'
          minItems: 1
          type: array
        repFreqs:
          items:
            $ref: '#/components/schemas/ReportingFrequency'
          minItems: 1
          type: array
        repThreshDl:
          minimum: 0
          type: integer
        repThreshUl:
          minimum: 0
          type: integer
        repThreshRp:
          minimum: 0
          type: integer
        waitTime:
          type: integer
        repPeriod:
          type: integer
      required:
      - repFreqs
      - reqQosMonParams
      type: object
    QosMonitoringInformationRm:
      properties:
        reqQosMonParams:
          items:
            $ref: '#/components/schemas/RequestedQosMonitoringParameter'
          minItems: 1
          type: array
        repFreqs:
          items:
            $ref: '#/components/schemas/ReportingFrequency'
          minItems: 1
          type: array
        repThreshDl:
          minimum: 0
          nullable: true
          type: integer
        repThreshUl:
          minimum: 0
          nullable: true
          type: integer
        repThreshRp:
          minimum: 0
          nullable: true
          type: integer
        waitTime:
          nullable: true
          type: integer
        repPeriod:
          nullable: true
          type: integer
      type: object
    QosMonitoringReport:
      example:
        ulDelays:
        - null
        - null
        rtDelays:
        - null
        - null
        dlDelays:
        - null
        - null
      properties:
        ulDelays:
          items:
            $ref: '#/components/schemas/Uinteger'
          minItems: 1
          type: array
        dlDelays:
          items:
            $ref: '#/components/schemas/Uinteger'
          minItems: 1
          type: array
        rtDelays:
          items:
            $ref: '#/components/schemas/Uinteger'
          minItems: 1
          type: array
      type: object
    UserPlaneNotificationData:
      example:
        eventReports:
        - flowIds:
          - 5
          - 5
          accumulatedUsage:
            duration: 0
            totalVolume: 0
            downlinkVolume: 0
            uplinkVolume: 0
          appliedQosRef: appliedQosRef
          qosMonReports:
          - ulDelays:
            - null
            - null
            rtDelays:
            - null
            - null
            dlDelays:
            - null
            - null
          - ulDelays:
            - null
            - null
            rtDelays:
            - null
            - null
            dlDelays:
            - null
            - null
        - flowIds:
          - 5
          - 5
          accumulatedUsage:
            duration: 0
            totalVolume: 0
            downlinkVolume: 0
            uplinkVolume: 0
          appliedQosRef: appliedQosRef
          qosMonReports:
          - ulDelays:
            - null
            - null
            rtDelays:
            - null
            - null
            dlDelays:
            - null
            - null
          - ulDelays:
            - null
            - null
            rtDelays:
            - null
            - null
            dlDelays:
            - null
            - null
        transaction: transaction
      properties:
        transaction:
          description: string formatted according to IETFÂ RFCÂ 3986 identifying a referenced
            resource.
          type: string
        eventReports:
          description: Contains the reported event and applicable information
          items:
            $ref: '#/components/schemas/UserPlaneEventReport'
          minItems: 1
          type: array
      required:
      - eventReports
      - transaction
      type: object
    UserPlaneEventReport:
      example:
        flowIds:
        - 5
        - 5
        accumulatedUsage:
          duration: 0
          totalVolume: 0
          downlinkVolume: 0
          uplinkVolume: 0
        appliedQosRef: appliedQosRef
        qosMonReports:
        - ulDelays:
          - null
          - null
          rtDelays:
          - null
          - null
          dlDelays:
          - null
          - null
        - ulDelays:
          - null
          - null
          rtDelays:
          - null
          - null
          dlDelays:
          - null
          - null
      properties:
        event:
          $ref: '#/components/schemas/UserPlaneEvent'
        accumulatedUsage:
          $ref: '#/components/schemas/AccumulatedUsage'
        flowIds:
          description: Identifies the IP flows that were sent during event subscription
          items:
            type: integer
          minItems: 1
          type: array
        appliedQosRef:
          description: The currently applied QoS reference. Applicable for event QOS_NOT_GUARANTEED
            or SUCCESSFUL_RESOURCES_ALLOCATION.
          type: string
        qosMonReports:
          description: Contains the QoS Monitoring Reporting information
          items:
            $ref: '#/components/schemas/QosMonitoringReport'
          minItems: 1
          type: array
      required:
      - event
      type: object
    UserPlaneEvent:
      anyOf:
      - $ref: '#/components/schemas/UserPlaneEvent_anyOf'
      - description: |
          This string provides forward-compatibility with future extensions to the enumeration but is not used to encode content defined in the present version of this API.
        type: string
      description: |
        Possible values are - SESSION_TERMINATION: Indicates that Rx session is terminated. - LOSS_OF_BEARER : Indicates a loss of a bearer. - RECOVERY_OF_BEARER: Indicates a recovery of a bearer. - RELEASE_OF_BEARER: Indicates a release of a bearer. - USAGE_REPORT: Indicates the usage report event. - FAILED_RESOURCES_ALLOCATION: Indicates the resource allocation is failed. - QOS_GUARANTEED: The QoS targets of one or more SDFs are guaranteed again. - QOS_NOT_GUARANTEED: The QoS targets of one or more SDFs are not being guaranteed. - QOS_MONITORING: Indicates a QoS monitoring event.  - SUCCESSFUL_RESOURCES_ALLOCATION: Indicates the resource allocation is successful.
    ProblemDetails:
      properties:
        type:
          description: string providing an URI formatted according to IETFÂ RFCÂ 3986.
          type: string
        title:
          description: A short, human-readable summary of the problem type. It should
            not change from occurrence to occurrence of the problem.
          type: string
        status:
          description: The HTTP status code for this occurrence of the problem.
          type: integer
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        instance:
          description: string providing an URI formatted according to IETFÂ RFCÂ 3986.
          type: string
        cause:
          description: A machine-readable application error cause specific to this
            occurrence of the problem. This IE should be present and provide application-related
            error information, if available.
          type: string
        invalidParams:
          description: Description of invalid parameters, for a request rejected due
            to invalid parameters.
          items:
            $ref: '#/components/schemas/InvalidParam'
          minItems: 1
          type: array
      type: object
    Uri:
      description: string providing an URI formatted according to IETFÂ RFCÂ 3986.
      type: string
    InvalidParam:
      properties:
        param:
          description: Attribute's name encoded as a JSON Pointer, or header's name.
          type: string
        reason:
          description: A human-readable reason, e.g. "must be a positive integer".
          type: string
      required:
      - param
      type: object
    Link:
      description: string formatted according to IETFÂ RFCÂ 3986 identifying a referenced
        resource.
      type: string
    SupportedFeatures:
      pattern: ^[A-Fa-f0-9]*$
      type: string
    FlowInfo:
      example:
        flowDescriptions:
        - flowDescriptions
        - flowDescriptions
        flowId: 0
      properties:
        flowId:
          description: Indicates the IP flow.
          type: integer
        flowDescriptions:
          description: Indicates the packet filters of the IP flow. Refer to subclauseÂ 5.3.8
            of 3GPPÂ TSÂ 29.214 for encoding. It shall contain UL and/or DL IP flow
            description.
          items:
            type: string
          maxItems: 2
          minItems: 1
          type: array
      required:
      - flowId
      type: object
    EthFlowDescription:
      description: Identifies an Ethernet flow
      example:
        destMacAddr: destMacAddr
        destMacAddrEnd: destMacAddrEnd
        sourceMacAddr: sourceMacAddr
        ethType: ethType
        fDesc: fDesc
        vlanTags:
        - vlanTags
        - vlanTags
        srcMacAddrEnd: srcMacAddrEnd
      properties:
        destMacAddr:
          pattern: ^([0-9a-fA-F]{2})((-[0-9a-fA-F]{2}){5})$
          type: string
        ethType:
          type: string
        fDesc:
          description: Defines a packet filter of an IP flow.
          type: string
        fDir:
          $ref: '#/components/schemas/FlowDirection'
        sourceMacAddr:
          pattern: ^([0-9a-fA-F]{2})((-[0-9a-fA-F]{2}){5})$
          type: string
        vlanTags:
          items:
            type: string
          maxItems: 2
          minItems: 1
          type: array
        srcMacAddrEnd:
          pattern: ^([0-9a-fA-F]{2})((-[0-9a-fA-F]{2}){5})$
          type: string
        destMacAddrEnd:
          pattern: ^([0-9a-fA-F]{2})((-[0-9a-fA-F]{2}){5})$
          type: string
      required:
      - ethType
      type: object
    FlowDescription:
      description: Defines a packet filter of an IP flow.
      type: string
    Ipv4Addr:
      description: string identifying a Ipv4 address formatted in the "dotted decimal"
        notation as defined in IETFÂ RFCÂ 1166.
      type: string
    Ipv6Addr:
      description: string identifying a Ipv6 address formatted according to clause
        4 in IETFÂ RFCÂ 5952. The mixed Ipv4 Ipv6 notation according to clause 5 of
        IETFÂ RFCÂ 5952 shall not be used.
      type: string
    MacAddr48:
      pattern: ^([0-9a-fA-F]{2})((-[0-9a-fA-F]{2}){5})$
      type: string
    UsageThreshold:
      example:
        duration: 0
        totalVolume: 0
        downlinkVolume: 0
        uplinkVolume: 0
      properties:
        duration:
          description: Unsigned integer identifying a period of time in units of seconds.
          minimum: 0
          type: integer
        totalVolume:
          description: Unsigned integer identifying a volume in units of bytes.
          format: int64
          minimum: 0
          type: integer
        downlinkVolume:
          description: Unsigned integer identifying a volume in units of bytes.
          format: int64
          minimum: 0
          type: integer
        uplinkVolume:
          description: Unsigned integer identifying a volume in units of bytes.
          format: int64
          minimum: 0
          type: integer
      type: object
    DurationSec:
      description: Unsigned integer identifying a period of time in units of seconds.
      minimum: 0
      type: integer
    Volume:
      description: Unsigned integer identifying a volume in units of bytes.
      format: int64
      minimum: 0
      type: integer
    SponsorInformation:
      example:
        aspId: aspId
        sponsorId: sponsorId
      properties:
        sponsorId:
          description: It indicates Sponsor ID.
          type: string
        aspId:
          description: It indicates Application Service Provider ID.
          type: string
      required:
      - aspId
      - sponsorId
      type: object
    WebsockNotifConfig:
      example:
        requestWebsocketUri: true
        websocketUri: websocketUri
      properties:
        websocketUri:
          description: string formatted according to IETFÂ RFCÂ 3986 identifying a referenced
            resource.
          type: string
        requestWebsocketUri:
          description: Set by the SCS/AS to indicate that the Websocket delivery is
            requested.
          type: boolean
      type: object
    UsageThresholdRm:
      nullable: true
      properties:
        duration:
          description: Unsigned integer identifying a period of time in units of seconds
            with "nullable=true" property.
          minimum: 0
          nullable: true
          type: integer
        totalVolume:
          description: Unsigned integer identifying a volume in units of bytes with
            "nullable=true" property.
          format: int64
          minimum: 0
          nullable: true
          type: integer
        downlinkVolume:
          description: Unsigned integer identifying a volume in units of bytes with
            "nullable=true" property.
          format: int64
          minimum: 0
          nullable: true
          type: integer
        uplinkVolume:
          description: Unsigned integer identifying a volume in units of bytes with
            "nullable=true" property.
          format: int64
          minimum: 0
          nullable: true
          type: integer
      type: object
    DurationSecRm:
      description: Unsigned integer identifying a period of time in units of seconds
        with "nullable=true" property.
      minimum: 0
      nullable: true
      type: integer
    VolumeRm:
      description: Unsigned integer identifying a volume in units of bytes with "nullable=true"
        property.
      format: int64
      minimum: 0
      nullable: true
      type: integer
    RequestedQosMonitoringParameter:
      anyOf:
      - $ref: '#/components/schemas/RequestedQosMonitoringParameter_anyOf'
      - type: string
    ReportingFrequency:
      anyOf:
      - $ref: '#/components/schemas/ReportingFrequency_anyOf'
      - type: string
    Uinteger:
      minimum: 0
      type: integer
    DurationSec_1:
      type: integer
    UintegerRm:
      minimum: 0
      nullable: true
      type: integer
    DurationSecRm_1:
      nullable: true
      type: integer
    AccumulatedUsage:
      example:
        duration: 0
        totalVolume: 0
        downlinkVolume: 0
        uplinkVolume: 0
      properties:
        duration:
          description: Unsigned integer identifying a period of time in units of seconds.
          minimum: 0
          type: integer
        totalVolume:
          description: Unsigned integer identifying a volume in units of bytes.
          format: int64
          minimum: 0
          type: integer
        downlinkVolume:
          description: Unsigned integer identifying a volume in units of bytes.
          format: int64
          minimum: 0
          type: integer
        uplinkVolume:
          description: Unsigned integer identifying a volume in units of bytes.
          format: int64
          minimum: 0
          type: integer
      type: object
    FlowDirection:
      anyOf:
      - $ref: '#/components/schemas/FlowDirection_anyOf'
      - description: |
          This string provides forward-compatibility with future extensions to the enumeration but is not used to encode content defined in the present version of this API.
        type: string
      description: |
        Possible values are - DOWNLINK: The corresponding filter applies for traffic to the UE. - UPLINK: The corresponding filter applies for traffic from the UE. - BIDIRECTIONAL: The corresponding filter applies for traffic both to and from the UE. - UNSPECIFIED: The corresponding filter applies for traffic to the UE (downlink), but has no specific direction declared. The service data flow detection shall apply the filter for uplink traffic as if the filter was bidirectional. The PCF shall not use the value UNSPECIFIED in filters created by the network in NW-initiated procedures. The PCF shall only include the value UNSPECIFIED in filters in UE-initiated procedures if the same value is received from the SMF.
    UserPlaneEvent_anyOf:
      enum:
      - SESSION_TERMINATION
      - LOSS_OF_BEARER
      - RECOVERY_OF_BEARER
      - RELEASE_OF_BEARER
      - USAGE_REPORT
      - FAILED_RESOURCES_ALLOCATION
      - QOS_GUARANTEED
      - QOS_NOT_GUARANTEED
      - QOS_MONITORING
      - SUCCESSFUL_RESOURCES_ALLOCATION
      type: string
    RequestedQosMonitoringParameter_anyOf:
      enum:
      - DOWNLINK
      - UPLINK
      - ROUND_TRIP
      type: string
    ReportingFrequency_anyOf:
      enum:
      - EVENT_TRIGGERED
      - PERIODIC
      - SESSION_RELEASE
      type: string
    FlowDirection_anyOf:
      enum:
      - DOWNLINK
      - UPLINK
      - BIDIRECTIONAL
      - UNSPECIFIED
      type: string
  securitySchemes:
    oAuth2ClientCredentials:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: '{tokenUrl}'
      type: oauth2
